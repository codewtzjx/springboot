spring:
  datasource:
      # 如果存在多个数据源，监控的时候可以通过名字来区分开来
      name: mysql
      # 连接数据库的url
      url: jdbc:mysql://localhost:3306/dev?serverTimezone=UTC
      # 连接数据库的账号
      username: root
      #  连接数据库的密码
      password: root
      # 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      # 扩展插件
      # 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
      filters: stat
      # 最大连接池数量
      maxActive: 20
      # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initialSize: 1
      # 获取连接时最大等待时间，单位毫秒
      maxWait: 60000
      # 最小连接池数量
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      # 连接保持空闲而不被驱逐的最长时间
      minEvictableIdleTimeMillis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句
      # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用
      validationQuery: select count(1) from 'table'
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      testWhileIdle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnBorrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false
      # 是否缓存preparedStatement，即PSCache
      poolPreparedStatements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true
      maxOpenPreparedStatements: -1
  #放行哪些包下的静态资源
  resources:
    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
# pagehelper分页插件
pagehelper:
    # 数据库的方言
    helperDialect: mysql
    # 启用合理化，如果pageNum < 1会查询第一页，如果pageNum > pages会查询最后一页
    reasonable: true
mybatis:
    mapper-locations: classpath:mapper/*.xml
    # 别名 pojo生成包地址
    type-aliases-package: com.domain.po
test.myUploadPath: /dev/test

